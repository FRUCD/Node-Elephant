<?xml version="1.0" encoding="utf-8"?>
<device schemaVersion="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_0.xsd">
  <name>CY8C5868AXI_LP035</name>
  <version>0.1</version>
  <description>CY8C58LP</description>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <peripherals>
    <peripheral>
      <name>Filter</name>
      <description>No description available</description>
      <baseAddress>0x400043A6</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x840F</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>Filter_DFB_PM_ACT_CFG_Register</name>
          <description>Active Mode Power Control Register</description>
          <addressOffset>0x0</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>en_dfb</name>
              <description>Enable DFB(s). Populated subsystems are counted from the LSB.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_dfb</name>
                  <description>Enable Power to DFB</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable_dfb</name>
                  <description>Disable Power to DFB</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DFB_PM_STBY_CFG_Register</name>
          <description>Alternate Active Mode Power Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>en_dfb</name>
              <description>Enable DFB(s). Populated subsystems are counted from the LSB.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_dfb</name>
                  <description>Enable Power to DFB during standby power mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable_dfb</name>
                  <description>Disable Power to DFB</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_Control_Register</name>
          <description>DFB Control Register</description>
          <addressOffset>0x83DA</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CORECLK_DISABLE</name>
              <description>This bit when set high disables (gates off) the clock to the entire core of the block. This includes all FFs except those used for the AHB interface and CSRs and all 6 RAMs. When disabled (set high) the AHB interface to the CSR is still fully functional. This bit is ANDed with the primary input signal dfb_clk_en to control the clock gate. dfb_clk_en must be high and CoreCLK_Disable must be low for the clock to run.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CORECLK_DISABLE_LOW</name>
                  <description>Core Clock is Enabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CORECLK_DISABLE_HIGH</name>
                  <description>Core Clock is Disabled (gated)</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADD6</name>
              <description>This bit is literally address bit 5 (6th bit) of the FSM RAM when addressed by the DFB Controller. It has no affect on the FSM RAM when addressed on the AHB interface. It controls the Banking feature of the FSM.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADDR6_LOW</name>
                  <description>ADDR6 is Low</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADDR6_HIGH</name>
                  <description>ADDR6 is HIGH</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RUN</name>
              <description>Setting this bit to 1 enables the DFB to run. Setting it to 0 forces the next state address of the FSM to zero of the active Bank, reinitializes the ACU's and PC's and clears the round flag, saturation flag, saturation detect flag and all 6 extended Enables in the Controller.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN_DIS</name>
                  <description>DFB operation is halted</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_EN</name>
                  <description>DFB is enabled to operate.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_Status_Register</name>
          <description>DFB Status Register</description>
          <addressOffset>0x83DE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>INTR_SEM2</name>
              <description>If this bit is high, semaphore register bit 2 is a source of the current interrupt. Write a '1' to this bit to clear it.</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEM2_OFF</name>
                  <description>Indicates no pending Semaphore 2 Interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEM2_ON</name>
                  <description>Indicates a pending Semaphore 2 Interrupt.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTR_SEM1</name>
              <description>If this bit is high, semaphore register bit 1 is a source of the current interrupt. Write a '1' to this bit to clear it.</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEM1_OFF</name>
                  <description>Indicates no pending Semaphore 1 Interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEM1_ON</name>
                  <description>Indicates a pending Semaphore 1 Interrupt.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTR_SEM0</name>
              <description>If this bit is high, semaphore register bit 0 is a source of the current interrupt. Write a '1' to this bit to clear it.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEM0_OFF</name>
                  <description>Indicates no pending Semaphore 0 Interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEM0_ON</name>
                  <description>Indicates a pending Semaphore 0 Interrupt.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTR_HOLDB</name>
              <description>If this bit is high, Holding register B is a source of the current interrupt. Write a '1' to this bit to clear it. Reading the Holding register B also clears this bit.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDB_OFF</name>
                  <description>Indicates no pending Holding B Register Interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDB_ON</name>
                  <description>Indicates a pending Holding B Register Interrupt.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTR_HOLDA</name>
              <description>If this bit is high, Holding register A is a source of the current interrupt. Write a '1' to this bit to clear it. Reading the Holding register A also clears this bit.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDA_OFF</name>
                  <description>Indicates no pending Holding A Register Interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDA_ON</name>
                  <description>Indicates a pending Holding A Register Interrupt.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RND_MODE</name>
              <description>Indicates that the DP is in Round mode - meaning that any result passing out of the DP unit is being rounded to a 16-bit value.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RND_OFF</name>
                  <description>Indicates Round Mode is off.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RND_ON</name>
                  <description>Indicates Round Mode is on.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SAT_MODE</name>
              <description>Indicates that the DP unit is in Saturation mode.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SAT_OFF</name>
                  <description>Indicates Saturation mode is off.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SAT_ON</name>
                  <description>Indicates Saturation mode is on.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAM_SEL</name>
              <description>This bit indicates which Control Store memory is in use, RAM A or RAM B.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAMSEL_LOW</name>
                  <description>Control Store memory A is in use.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAMSEL_HIGH</name>
                  <description>Control Store memory B is in use.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DFB_RAM_EN_Register</name>
          <description>DFB Ram Enable Register</description>
          <addressOffset>0x83E2</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>RAMWR_ADDRING</name>
              <description>These two bits control the write addressing of the 4 largest RAMs embedded in the DFB (CS-A, CS-B, Data-A, Data-B). The setting of these bits allows overlaid writes to occur to these memories when it is desired to fill them with like data.</description>
              <lsb>6</lsb>
              <msb>7</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_OVERLAY</name>
                  <description>No overlay mapping.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERLAY_CS_A_CS_B</name>
                  <description>Overlay CS A with CS B.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERLAY_DATA_A_DATA_B</name>
                  <description>Overlay Data A with Data B.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERLAY_CS_AB_DATA_AB</name>
                  <description>Overlay CS A/B with Data A with DATA B.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPB_EN</name>
              <description>Datapath RAM B RAM enable / disable.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPA_EN</name>
              <description>Datapath RAM A RAM enable / disable.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACU_EN</name>
              <description>ACU RAM RAM enable / disable.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSB_EN</name>
              <description>Control Store RAM B RAM enable / disable.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSA_EN</name>
              <description>Control Store RAM A RAM enable / disable.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_EN</name>
              <description>FSM RAM RAM enable / disable.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DIS</name>
                  <description>RAM is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_EN</name>
                  <description>RAM is enabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_RAM_DIR_Register</name>
          <description>DFB RAM Direction Register. This register controls the DFB memory direction. These bits control if each RAM of this block is embedded to the DFB function or mapped in the system address space on the AHB bus. </description>
          <addressOffset>0x83E6</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SNP_DABLE</name>
              <description>The CS and DP RAMs (optionally the FSM) have address snooping logic that watches for redundant back-to-back RD cycles and disables the RAM to conserve power. Writing a 1 to this bit disables this logic for all RAMs.</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SNP_ENABLE</name>
                  <description>Enabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SNP_DISABLE</name>
                  <description>Disabled</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPB_DIR</name>
              <description>Datapath RAM B RAM Direction.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPA_DIR</name>
              <description>Datapath RAM A RAM Direction.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACU_DIR</name>
              <description>ACU RAM RAM Direction.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSB_DIR</name>
              <description>Control Store RAM B RAM Direction.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSA_DIR</name>
              <description>Control Store RAM B RAM Direction.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_DIR</name>
              <description>FSM RAM RAM Direction.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAM_DFB</name>
                  <description>DFB</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM_AHB</name>
                  <description>System Bus</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DFB_SEMA_Register</name>
          <description>DFB Semaphore Register</description>
          <addressOffset>0x83EA</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SEMA_MASK</name>
              <description>These bits are used to mask writes to bits 2-0. They are write-only. If bit 4 is a 1 then the value on bit 0 will be written to SEM0, otherwise SEM0 will not be altered. Likewise for MASK1 and SEM1, and MASK2 and SEM2.</description>
              <lsb>4</lsb>
              <msb>6</msb>
              <access>write-only</access>
            </field>
            <field>
              <name>SEMA</name>
              <description>These bits are used to pass semaphores between the DFB Controller and the System SW. Their definition is user defined. There is no HW implementing an arbitration methodology should both the System and Control access the same SEM bit at the same time.</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DSI_Control_Register</name>
          <description>DFB Global Cotrol Register</description>
          <addressOffset>0x83EE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>GBL2_OUT</name>
              <description>These bits are used to control what internal signals are mapped to the primary output signal dfb_globalo2.</description>
              <lsb>2</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEM2</name>
                  <description>Semaphore Bit 2. This is the same signal described in the DFB0_SEMA CSR.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DPSIGN</name>
                  <description>Datapath Sign. This signal asserts anytime the output of the ALU in the Datapath unit is negative. It will remain high for each cycle this condition is true.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DPTHREASH</name>
                  <description>Datapath Threashold Crossed. This signal asserts anytime the threashold of 0 is crossed in the ALU when one of the following instructions is executing: TDECA, TSUBA, TSUBB, TADDABSA, TADDABSB. It will remain high for each cycle this condition is true.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DPEQ</name>
                  <description>Datapath ALU=0. This signal asserts high when the output of the ALU in the Datapath unit equals 0 and one of the following ALU commands is executing: TDECA, TSUBA, TSUBB, TADDABSA, TADDABSB. It will remain high for each cycle this condition is true.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GBL1_OUT</name>
              <description>These bits are used to control what internal signals are mapped to the primary output signal dfb_globalo1.</description>
              <lsb>0</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DFB_RUN</name>
                  <description>DFB RUN Bit. This is the same bit as the RUN bit in the DFB0_CR register.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEM0</name>
                  <description>Semaphore Bit 0. This is the same signal described in the DFB0_SEMA CSR.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEM1</name>
                  <description>Semaphore Bit 1. This is the same signal described in the DFB0_SEMA CSR.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DFB_INTR</name>
                  <description>DFB Interrupt. This is the same signal as the primary dfb_intr output signal.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_Interrupt_Control_Register</name>
          <description>DFB Interrupt Control Register</description>
          <addressOffset>0x83F2</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SEMA2_EN</name>
              <description>If this bit is set high, an interrupt is generated each time a 1 is written into the semaphore register bit 2.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_2_IRQ_DIS</name>
                  <description>Semaphore register interrupt masked.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_2_IRQ_EN</name>
                  <description>Interrupt is generated each time a 1 is written to the semaphore register.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEMA1_EN</name>
              <description>If this bit is set high, an interrupt is generated each time a 1 is written into the semaphore register bit 1.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_1_IRQ_DIS</name>
                  <description>Semaphore register interrupt masked.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_1_IRQ_EN</name>
                  <description>Interrupt is generated each time a 1 is written to the semaphore register.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEMA0_EN</name>
              <description>If this bit is set high, an interrupt is generated each time a 1 is written into the semaphore register bit 0.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_0_IRQ_DIS</name>
                  <description>Semaphore register interrupt masked.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_SEMAPHORE_0_IRQ_EN</name>
                  <description>Interrupt is generated each time a 1 is written to the semaphore register.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOLDB_EN</name>
              <description>If this bit is set high, an interrupt is generated each time new valid data is written into the output Holding register B.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_HOLDING_B_IRQ_DIS</name>
                  <description>Holding register interrupt masked.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_HOLDING_B_IRQ_EN</name>
                  <description>Interrupt is generated each time new valid data is written inot the output Holding B register.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOLDA_EN</name>
              <description>If this bit is set high, an interrupt is generated each time new valid data is written into the output Holding register A.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_HOLDING_A_IRQ_DIS</name>
                  <description>Holding register interrupt masked.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_HOLDING_A_IRQ_EN</name>
                  <description>Interrupt is generated each time new valid data is written inot the output Holding A register.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DMA_Control_Register</name>
          <description>DFB DMAREQ Control Register</description>
          <addressOffset>0x83F6</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DMAREQ2</name>
              <description>The value in these two bits selects which event drives dma_req2.</description>
              <lsb>2</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMAREQ2_DISABLED</name>
                  <description>Disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ2_HOLDING_REG_B</name>
                  <description>New data in Holding Register B.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ2_SEMAPHORE_0</name>
                  <description>Semaphore 0.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ2_SEMAPHORE_1</name>
                  <description>Semaphore 1.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAREQ1</name>
              <description>The value in these two bits selects which event drives dma_req1.</description>
              <lsb>0</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMAREQ1_DISABLED</name>
                  <description>Disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ1_HOLDING_REG_A</name>
                  <description>New data in Holding Register A.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ1_SEMAPHORE_0</name>
                  <description>Semaphore 0.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMAREQ1_SEMAPHORE_1</name>
                  <description>Semaphore 1.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEA_Register</name>
          <description>DFB_STAGEA (Input Low Byte) Register</description>
          <addressOffset>0x83FA</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGA_LOW</name>
              <description>This is the low byte of the Streaming input Staging Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEAM_Register</name>
          <description>DFB_STAGEAM (Input Middle Byte) Register</description>
          <addressOffset>0x83FB</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGA_MID</name>
              <description>This is the middle byte of the Streaming input Staging Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEAH_Register</name>
          <description>DFB_STAGEAH (Input High Byte) Register</description>
          <addressOffset>0x83FC</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGA_HIGH</name>
              <description>This is the high byte of the Streaming input Staging Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEB_Register</name>
          <description>DFB_STAGEB (Input Low Byte) Register</description>
          <addressOffset>0x83FE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGB_LOW</name>
              <description>This is the low byte of the Streaming input Staging Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEBM_Register</name>
          <description>DFB_STAGEBM (Input Middle Byte) Register</description>
          <addressOffset>0x83FF</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGB_MID</name>
              <description>This is the middle byte of the Streaming input Staging Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_STAGEBH_Register</name>
          <description>DFB_STAGEBH (Input High Byte) Register</description>
          <addressOffset>0x8400</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>STGB_HIGH</name>
              <description>This is the high byte of the Streaming input Staging Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDA_Register</name>
          <description>DFB_HOLDA (Output Low Byte) Register</description>
          <addressOffset>0x8402</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDA_LOW</name>
              <description>This is the low byte of the output Holding Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDAM_Register</name>
          <description>DFB_HOLDAM (Output Middle Byte) Register</description>
          <addressOffset>0x8403</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDA_MID</name>
              <description>This is the middle byte of the output Holding Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDAH_Register</name>
          <description>DFB_HOLDAH (Output High Byte) Register</description>
          <addressOffset>0x8404</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDA_HIGH</name>
              <description>This is the high byte of the output Holding Register - Port A.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDB_Register</name>
          <description>DFB_HOLDB (Output Low Byte) Register</description>
          <addressOffset>0x8406</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDB_LOW</name>
              <description>This is the low byte of the output Holding Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDBM_Register</name>
          <description>DFB_HOLDBM (Output Middle Byte) Register</description>
          <addressOffset>0x8407</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDB_MID</name>
              <description>This is the middle byte of the output Holding Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_HOLDBH_Register</name>
          <description>DFB_HOLDBH (Output High Byte) Register</description>
          <addressOffset>0x8408</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>HOLDB_HIGH</name>
              <description>This is the high byte of the output Holding Register - Port B.</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DFB_COHER_Register</name>
          <description>DFB Coherency Register</description>
          <addressOffset>0x840A</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>holdb_key</name>
              <description>Sets the Key Coherency Byte of the Holding B register</description>
              <lsb>6</lsb>
              <msb>7</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDB_KEY_LOW</name>
                  <description>Key Byte is low byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDB_KEY_MID</name>
                  <description>Key Byte is middle byte.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDB_KEY_HIGH</name>
                  <description>Key Byte is high byte.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>holda_key</name>
              <description>Sets the Key Coherency Byte of the Holding A register</description>
              <lsb>4</lsb>
              <msb>5</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDA_KEY_LOW</name>
                  <description>Key Byte is low byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDA_KEY_MID</name>
                  <description>Key Byte is middle byte.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDA_KEY_HIGH</name>
                  <description>Key Byte is high byte.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>stgb_key</name>
              <description>Sets the Key Coherency Byte of the Staging B register.</description>
              <lsb>2</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STGB_KEY_LOW</name>
                  <description>Key Byte is low byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGB_KEY_MID</name>
                  <description>Key Byte is middle byte.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGB_KEY_HIGH</name>
                  <description>Key Byte is high byte.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>stga_key</name>
              <description>Sets the Key Coherency Byte of the Staging A register.</description>
              <lsb>0</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STGA_KEY_LOW</name>
                  <description>Key Byte is low byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGA_KEY_MID</name>
                  <description>Key Byte is middle byte.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGA_KEY_HIGH</name>
                  <description>Key Byte is high byte.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Filter_DFB_DALIGN_Register</name>
          <description>DFB Data Align Register</description>
          <addressOffset>0x840E</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>holdb_dalign</name>
              <description>Shifts the read right by a byte.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDB_DALIGN_LOW</name>
                  <description>Reads normally.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDB_DALIGN_HIGH</name>
                  <description>Reads shifted right by 8-bits.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>holda_dalign</name>
              <description>Shifts the read right by a byte.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOLDA_DALIGN_LOW</name>
                  <description>Reads normally.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOLDA_DALIGN_HIGH</name>
                  <description>Reads shifted right by 8-bits.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>stgb_dalign</name>
              <description>Shifts the write left by a byte.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STGB_DALIGN_LOW</name>
                  <description>Writes normally.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGB_DALIGN_HIGH</name>
                  <description>Writes shifted left by 8-bits.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>stga_dalign</name>
              <description>Shifts the write left by a byte.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STGA_DALIGN_LOW</name>
                  <description>Writes normally.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STGA_DALIGN_HIGH</name>
                  <description>Writes shifted left by 8-bits.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CAN</name>
      <description>No description available</description>
      <baseAddress>0x4000A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x28D</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CAN_CSR_INT_SR</name>
          <description>The interrupt status register stores internal interrupt events. Once a bit is set it remains set until                it is cleared by writing a '1' to it. The interrupt enable register has no effect on the interrupt status                register. A pending interrupt occurs when the flag is set to '1'. To acknowledge an interrupt, set the                flag to '1'</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ARB_LOSS</name>
              <description>Arbitration Loss</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>OVR_LOAD</name>
              <description>Overload Interrupt</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ERR</name>
              <description>Bit Error Interrupt</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>STUF_ERR</name>
              <description>Stuff Error Interrupt</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ACK_ERR</name>
              <description>Ack Error Interrupt</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>FORM_ERR</name>
              <description>Form Error Interrupt</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC_ERR</name>
              <description>CRC Error Interrupt</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>BUS_OFF</name>
              <description>Bus Off State</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG_LOSS</name>
              <description>Rx msg loss Interrupt</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG</name>
              <description>Tx msg Sent</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG</name>
              <description>Msg Recieved</description>
              <lsb>12</lsb>
              <msb>12</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_CSR_BUF_SR</name>
          <description>These status indicators bundle the respective flags from all RxMessage and TxMessage buffers. Note All               flags are read only. To acknowledge a MsgAv flag, the CPU must write to the respective RxMessage buffer</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>RX_MSG0</name>
              <description>Rx Msg0 Available</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG1</name>
              <description>Rx Msg1 Available</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG2</name>
              <description>Rx Msg2 Available</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG3</name>
              <description>Rx Msg3 Available</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG4</name>
              <description>Rx Msg4 Available</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG5</name>
              <description>Rx Msg5 Available</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG6</name>
              <description>Rx Msg6 Available</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG7</name>
              <description>Rx Msg7 Available</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG8</name>
              <description>Rx Msg8 Available</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG9</name>
              <description>Rx Msg9 Available</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG10</name>
              <description>Rx Msg10 Available</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG11</name>
              <description>Rx Msg11 Available</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG12</name>
              <description>Rx Msg12 Available</description>
              <lsb>12</lsb>
              <msb>12</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG13</name>
              <description>Rx Msg13 Available</description>
              <lsb>13</lsb>
              <msb>13</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG14</name>
              <description>Rx Msg14 Available</description>
              <lsb>14</lsb>
              <msb>14</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSG15</name>
              <description>Rx Msg15 Available</description>
              <lsb>15</lsb>
              <msb>15</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG0</name>
              <description>Tx req Pending for Tx Msg0</description>
              <lsb>16</lsb>
              <msb>16</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG1</name>
              <description>Tx req Pending for Tx Msg1</description>
              <lsb>17</lsb>
              <msb>17</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG2</name>
              <description>Tx req Pending for Tx Msg2</description>
              <lsb>18</lsb>
              <msb>18</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG3</name>
              <description>Tx req Pending for Tx Msg3</description>
              <lsb>19</lsb>
              <msb>19</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG4</name>
              <description>Tx req Pending for Tx Msg4</description>
              <lsb>20</lsb>
              <msb>20</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG5</name>
              <description>Tx req Pending for Tx Msg5</description>
              <lsb>21</lsb>
              <msb>21</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG6</name>
              <description>Tx req Pending for Tx Msg6</description>
              <lsb>22</lsb>
              <msb>22</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSG7</name>
              <description>Tx req Pending for Tx Msg7</description>
              <lsb>23</lsb>
              <msb>23</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_CSR_ERR_SR</name>
          <description>Status indicators are provided to report the CAN controller error state, receive error count, and                transmit error count. Special flags report error counter values equal to or in excess of 96 errors are                available to indicate heavily disturbed bus situations. The transmitter error counter according to the                CAN standard. When it is greater than 255 Decomal, it is fixed at 255 Decimal.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TX_ERR_CNT</name>
              <description>Tx error Count</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ERR_CNT</name>
              <description>Rx error Count. When in bus-off state,this counter is used to count 128 groups of 11 recessive bits</description>
              <lsb>8</lsb>
              <msb>15</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_STATE</name>
              <description>Error State of CAN node, 00 error active, 01 error passive, 1x bus off</description>
              <lsb>16</lsb>
              <msb>17</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>TXGTE96</name>
              <description>Tx Error Count is greater or equal to 96 Decimal</description>
              <lsb>18</lsb>
              <msb>18</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>RXGTE96</name>
              <description>Rx Error Count is greater or equal to 96 Decimal</description>
              <lsb>19</lsb>
              <msb>19</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX0_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX0_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX0_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX1_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX1_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX1_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX2_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX2_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX2_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX3_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX3_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX3_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX4_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX4_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX4_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX5_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX5_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX5_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX6_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX6_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX6_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX7_ID</name>
          <description>CAN Tx Msg Identifier</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Tx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX7_DH</name>
          <description>CAN Tx Msg Upper Data Bytes</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_TX7_DL</name>
          <description>CAN Tx Msg Lower Data Bytes</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX0_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX0_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX0_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX1_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX1_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX1_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX2_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX2_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX2_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX3_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX3_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX3_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX4_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX4_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX4_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX5_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX5_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX5_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX6_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX6_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX6_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX7_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX7_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX7_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x18C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX8_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x1A4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX8_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x1A8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX8_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x1AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX9_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x1C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX9_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x1C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX9_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x1CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX10_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x1E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX10_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x1E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX10_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x1EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX11_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX11_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX11_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX12_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX12_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX12_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX13_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX13_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX13_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX14_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX14_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x268</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX14_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x26C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX15_ID</name>
          <description>The register contains Rx Msg Identifier</description>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ZEROES</name>
              <description>zeros</description>
              <lsb>0</lsb>
              <msb>2</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>ID</name>
              <description>Rx Msg Indentifier</description>
              <lsb>3</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX15_DH</name>
          <description>The register contains the Rx Msg Upper Data Bytes</description>
          <addressOffset>0x288</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_HIGH</name>
              <description>Upper Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN0_RX15_DL</name>
          <description>The register contains the Rx Msg Lover Data Bytes</description>
          <addressOffset>0x28C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA_LOW</name>
              <description>Lower Data Bytes</description>
              <lsb>0</lsb>
              <msb>31</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Timer</name>
      <description>No description available</description>
      <baseAddress>0x40006506</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x92</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>Timer_COUNTER</name>
          <description>UDB.A0 - Current Down Counter Value</description>
          <addressOffset>0x0</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>Timer_PERIOD</name>
          <description>UDB.D0 - Assigned Period</description>
          <addressOffset>0x20</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>Timer_Control_Reg</name>
          <description>UDB Control Register - Assigned Control Register Value</description>
          <addressOffset>0x70</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CTRL_ENABLE</name>
              <description>Enable the Timer</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRL_CMODE</name>
              <description>Capture Mode</description>
              <lsb>5</lsb>
              <msb>6</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRL_TEN</name>
              <description>Trigger Enable Bit</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRL_TMODE</name>
              <description>Trigger Mode</description>
              <lsb>2</lsb>
              <msb>3</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRL_IC</name>
              <description>Interrupt Count</description>
              <lsb>0</lsb>
              <msb>1</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Timer_STATUS_MASK</name>
          <description>UDB Status bits Interrupt Mask Enable Register</description>
          <addressOffset>0x81</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TIMER_STS_TC</name>
              <description>Enables the Interrupt on TC</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER_STS_CAPT</name>
              <description>Enables the Interrupt on Capture</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER_STS_FIFO_FULL</name>
              <description>FIFO Full Status </description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER_STS_FIFO_NEMPTY</name>
              <description>FIFO Empty status </description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Timer_STATUS_AUX_CTRL</name>
          <description>UDB Auxilliary Control Register</description>
          <addressOffset>0x91</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>FIFO0_CLR</name>
              <description>FIFO0 clear</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_FIFO_CLR_0</name>
                  <description>Normal FIFO operation</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_FIFO_CLR_1</name>
                  <description>Clear FIFO state</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO1_CLR</name>
              <description>FIFO1 clear</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_FIFO_CLR_0</name>
                  <description>Normal FIFO operation</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_FIFO_CLR_1</name>
                  <description>Clear FIFO state</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO0_LVL</name>
              <description>FIFO level</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_FIFO_LVL_0</name>
                  <description>FIFO LVL: input mode: FIFO not full; output mode: FIFO not empty</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_FIFO_LVL_1</name>
                  <description>FIFO LVL: input mode: FIFO at least 1/2 empty; output mode: FIFO at least 1/2 full</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO1_LVL</name>
              <description>FIFO level</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_FIFO_LVL_0</name>
                  <description>FIFO LVL: input mode: FIFO not full; output mode: FIFO not empty</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_FIFO_LVL_1</name>
                  <description>FIFO LVL: input mode: FIFO at least 1/2 empty; output mode: FIFO at least 1/2 full</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_EN</name>
              <description>No description available</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_INT_EN0</name>
                  <description>Interrupt disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_INT_EN1</name>
                  <description>Interrupt enabled</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CNT_START</name>
              <description>FIFO0 clear</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_CNT_START0</name>
                  <description>Disable counter</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_CNT_START1</name>
                  <description>Enable counter</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ADC_SAR_SAR</name>
      <description>SAR ADC</description>
      <baseAddress>0x40004616</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x158D</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SAR_TR0</name>
          <description>SAR trim register</description>
          <addressOffset>0x0</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR0</name>
          <description>SAR status and control register 0</description>
          <addressOffset>0x12F2</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR1</name>
          <description>SAR status and control register 1</description>
          <addressOffset>0x12F3</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR2</name>
          <description>SAR status and control register 2</description>
          <addressOffset>0x12F4</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR3</name>
          <description>SAR status and control register 3</description>
          <addressOffset>0x12F5</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR4</name>
          <description>SAR status and control register 4</description>
          <addressOffset>0x12F6</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR5</name>
          <description>SAR status and control register 5</description>
          <addressOffset>0x12F7</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CSR6</name>
          <description>SAR status and control register 6</description>
          <addressOffset>0x12F8</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_SW0</name>
          <description>SAR Analog Routing Register 0</description>
          <addressOffset>0x1512</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_SW2</name>
          <description>SAR Analog Routing Register 2</description>
          <addressOffset>0x1514</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_SW3</name>
          <description>SAR Analog Routing Register 3</description>
          <addressOffset>0x1515</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_SW4</name>
          <description>SAR Analog Routing Register 4</description>
          <addressOffset>0x1516</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_SW6</name>
          <description>SAR Analog Routing Register 6</description>
          <addressOffset>0x1518</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_CLK</name>
          <description>SAR Clock Selection Register</description>
          <addressOffset>0x1519</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
        <register>
          <name>SAR_WRK</name>
          <description>SAR working register</description>
          <addressOffset>0x158C</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>