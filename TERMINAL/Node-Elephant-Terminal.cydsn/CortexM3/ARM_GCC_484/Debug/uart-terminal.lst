ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"uart-terminal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.terminal_echo,"ax",%progbits
  19              		.align	2
  20              		.global	terminal_echo
  21              		.thumb
  22              		.thumb_func
  23              		.type	terminal_echo, %function
  24              	terminal_echo:
  25              	.LFB56:
  26              		.file 1 ".\\uart-terminal.c"
   1:.\uart-terminal.c **** /* ========================================
   2:.\uart-terminal.c ****  *
   3:.\uart-terminal.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\uart-terminal.c ****  * All Rights Reserved
   5:.\uart-terminal.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\uart-terminal.c ****  *
   7:.\uart-terminal.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\uart-terminal.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\uart-terminal.c ****  *
  10:.\uart-terminal.c ****  * ========================================
  11:.\uart-terminal.c **** */
  12:.\uart-terminal.c **** 
  13:.\uart-terminal.c **** #include "uart-terminal.h"
  14:.\uart-terminal.c **** 
  15:.\uart-terminal.c **** /****************************************************************************
  16:.\uart-terminal.c **** * Function Name: terminal_echo(char serial_in[], uint8* track)
  17:.\uart-terminal.c **** *****************************************************************************
  18:.\uart-terminal.c **** *
  19:.\uart-terminal.c **** * Summary:
  20:.\uart-terminal.c **** *  Echos back to the terminal the current key stroke. If enter key is pressed,
  21:.\uart-terminal.c **** *  this function will call terminal_parse() to get the inputed command
  22:.\uart-terminal.c **** *
  23:.\uart-terminal.c **** * Parameters:
  24:.\uart-terminal.c **** *  serial_in[]: array to store the inputs, array of chars
  25:.\uart-terminal.c **** *  track: pointer to track which keeps track of the number of inputs i.e. chars
  26:.\uart-terminal.c **** *
  27:.\uart-terminal.c **** * Return:
  28:.\uart-terminal.c **** *  None.
  29:.\uart-terminal.c **** *
  30:.\uart-terminal.c **** ****************************************************************************/
  31:.\uart-terminal.c **** void terminal_echo(char serial_in[], uint8* track)
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 2


  32:.\uart-terminal.c **** {
  27              		.loc 1 32 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
  33:.\uart-terminal.c ****     uint8 buffer = 0;
  41              		.loc 1 33 0
  42 000a 0023     		movs	r3, #0
  43 000c FB73     		strb	r3, [r7, #15]
  34:.\uart-terminal.c ****               
  35:.\uart-terminal.c ****     buffer = 0;
  44              		.loc 1 35 0
  45 000e 0023     		movs	r3, #0
  46 0010 FB73     		strb	r3, [r7, #15]
  36:.\uart-terminal.c ****     
  37:.\uart-terminal.c ****     if(USBUART_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE request */
  47              		.loc 1 37 0
  48 0012 FFF7FEFF 		bl	USBUART_IsConfigurationChanged
  49 0016 0346     		mov	r3, r0
  50 0018 002B     		cmp	r3, #0
  51 001a 06D0     		beq	.L2
  38:.\uart-terminal.c ****     {
  39:.\uart-terminal.c ****         if(USBUART_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
  52              		.loc 1 39 0
  53 001c FFF7FEFF 		bl	USBUART_GetConfiguration
  54 0020 0346     		mov	r3, r0
  55 0022 002B     		cmp	r3, #0
  56 0024 01D0     		beq	.L2
  40:.\uart-terminal.c ****         {
  41:.\uart-terminal.c ****             /* Enumeration is done, enable OUT endpoint for receive data from Host */
  42:.\uart-terminal.c ****             USBUART_CDC_Init();
  57              		.loc 1 42 0
  58 0026 FFF7FEFF 		bl	USBUART_CDC_Init
  59              	.L2:
  43:.\uart-terminal.c ****         }
  44:.\uart-terminal.c ****     }         
  45:.\uart-terminal.c ****     if(USBUART_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
  60              		.loc 1 45 0
  61 002a FFF7FEFF 		bl	USBUART_GetConfiguration
  62 002e 0346     		mov	r3, r0
  63 0030 002B     		cmp	r3, #0
  64 0032 3ED0     		beq	.L1
  46:.\uart-terminal.c ****     {
  47:.\uart-terminal.c ****         if(USBUART_DataIsReady() != 0u)               /* Check for input data from PC */
  65              		.loc 1 47 0
  66 0034 FFF7FEFF 		bl	USBUART_DataIsReady
  67 0038 0346     		mov	r3, r0
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 3


  68 003a 002B     		cmp	r3, #0
  69 003c 39D0     		beq	.L1
  48:.\uart-terminal.c ****         {   
  49:.\uart-terminal.c ****             buffer = USBUART_GetChar();           /* Read received data and re-enable OUT endpoint 
  70              		.loc 1 49 0
  71 003e FFF7FEFF 		bl	USBUART_GetChar
  72 0042 0346     		mov	r3, r0
  73 0044 FB73     		strb	r3, [r7, #15]
  50:.\uart-terminal.c ****             if(buffer != 0)
  74              		.loc 1 50 0
  75 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  76 0048 002B     		cmp	r3, #0
  77 004a 32D0     		beq	.L1
  51:.\uart-terminal.c ****             {
  52:.\uart-terminal.c ****                 serial_in[*track] = (char)buffer;
  78              		.loc 1 52 0
  79 004c 3B68     		ldr	r3, [r7]
  80 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  81 0050 7A68     		ldr	r2, [r7, #4]
  82 0052 1344     		add	r3, r3, r2
  83 0054 FA7B     		ldrb	r2, [r7, #15]
  84 0056 1A70     		strb	r2, [r3]
  53:.\uart-terminal.c ****                 while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send more 
  85              		.loc 1 53 0
  86 0058 00BF     		nop
  87              	.L4:
  88              		.loc 1 53 0 is_stmt 0 discriminator 1
  89 005a FFF7FEFF 		bl	USBUART_CDCIsReady
  90 005e 0346     		mov	r3, r0
  91 0060 002B     		cmp	r3, #0
  92 0062 FAD0     		beq	.L4
  54:.\uart-terminal.c ****                 USBUART_PutChar((char)buffer);       /* Send data back to PC */    
  93              		.loc 1 54 0 is_stmt 1
  94 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  95 0066 1846     		mov	r0, r3
  96 0068 FFF7FEFF 		bl	USBUART_PutChar
  55:.\uart-terminal.c ****                 
  56:.\uart-terminal.c ****                 if(buffer == 127)           // checks for backspace = 127
  97              		.loc 1 56 0
  98 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  99 006e 7F2B     		cmp	r3, #127
 100 0070 09D1     		bne	.L5
  57:.\uart-terminal.c ****                 {
  58:.\uart-terminal.c ****                     if(track != 0)          // subtract only if not at the front of the array
 101              		.loc 1 58 0
 102 0072 3B68     		ldr	r3, [r7]
 103 0074 002B     		cmp	r3, #0
 104 0076 0CD0     		beq	.L7
  59:.\uart-terminal.c ****                         (*track)--;
 105              		.loc 1 59 0
 106 0078 3B68     		ldr	r3, [r7]
 107 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 108 007c 013B     		subs	r3, r3, #1
 109 007e DAB2     		uxtb	r2, r3
 110 0080 3B68     		ldr	r3, [r7]
 111 0082 1A70     		strb	r2, [r3]
 112 0084 05E0     		b	.L7
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 4


 113              	.L5:
  60:.\uart-terminal.c ****                 }
  61:.\uart-terminal.c ****                 else
  62:.\uart-terminal.c ****                     (*track)++;
 114              		.loc 1 62 0
 115 0086 3B68     		ldr	r3, [r7]
 116 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 117 008a 0133     		adds	r3, r3, #1
 118 008c DAB2     		uxtb	r2, r3
 119 008e 3B68     		ldr	r3, [r7]
 120 0090 1A70     		strb	r2, [r3]
 121              	.L7:
  63:.\uart-terminal.c ****                 
  64:.\uart-terminal.c ****                 if((char)buffer == '\r')        // if enter key was pressed
 122              		.loc 1 64 0
 123 0092 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 124 0094 0D2B     		cmp	r3, #13
 125 0096 0CD1     		bne	.L1
  65:.\uart-terminal.c ****                 {
  66:.\uart-terminal.c ****                     serial_in[*track-1] = '\0';
 126              		.loc 1 66 0
 127 0098 3B68     		ldr	r3, [r7]
 128 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 129 009c 013B     		subs	r3, r3, #1
 130 009e 7A68     		ldr	r2, [r7, #4]
 131 00a0 1344     		add	r3, r3, r2
 132 00a2 0022     		movs	r2, #0
 133 00a4 1A70     		strb	r2, [r3]
  67:.\uart-terminal.c ****                     terminal_parse(serial_in);                                      
 134              		.loc 1 67 0
 135 00a6 7868     		ldr	r0, [r7, #4]
 136 00a8 FFF7FEFF 		bl	terminal_parse
  68:.\uart-terminal.c ****                     *track = 0;
 137              		.loc 1 68 0
 138 00ac 3B68     		ldr	r3, [r7]
 139 00ae 0022     		movs	r2, #0
 140 00b0 1A70     		strb	r2, [r3]
 141              	.L1:
  69:.\uart-terminal.c ****                 }
  70:.\uart-terminal.c ****             }
  71:.\uart-terminal.c ****         }  
  72:.\uart-terminal.c ****     }   
  73:.\uart-terminal.c **** }
 142              		.loc 1 73 0
 143 00b2 1037     		adds	r7, r7, #16
 144 00b4 BD46     		mov	sp, r7
 145              		@ sp needed
 146 00b6 80BD     		pop	{r7, pc}
 147              		.cfi_endproc
 148              	.LFE56:
 149              		.size	terminal_echo, .-terminal_echo
 150              		.section	.rodata
 151              		.align	2
 152              	.LC0:
 153 0000 0D0A312E 		.ascii	"\015\0121. Help\015\0122. Print ADC\015\012        "
 153      2048656C 
 153      700D0A32 
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 5


 153      2E205072 
 153      696E7420 
 154 0021 50726573 		.ascii	"Press ESC to stop conversions\015\0123. Something3\012"
 154      73204553 
 154      4320746F 
 154      2073746F 
 154      7020636F 
 155 004e 0D00     		.ascii	"\015\000"
 156              		.align	2
 157              	.LC1:
 158 0050 68656C70 		.ascii	"help\000"
 158      00
 159 0055 000000   		.align	2
 160              	.LC2:
 161 0058 3100     		.ascii	"1\000"
 162 005a 0000     		.align	2
 163              	.LC3:
 164 005c 5072696E 		.ascii	"Print ADC\000"
 164      74204144 
 164      4300
 165 0066 0000     		.align	2
 166              	.LC4:
 167 0068 3200     		.ascii	"2\000"
 168              		.global	__aeabi_f2d
 169 006a 0000     		.align	2
 170              	.LC5:
 171 006c 0A0D2530 		.ascii	"\012\015%0.4fv, %d\000"
 171      2E346676 
 171      2C202564 
 171      00
 172 0079 000000   		.align	2
 173              	.LC6:
 174 007c 0A0D5374 		.ascii	"\012\015Stopped\012\015\000"
 174      6F707065 
 174      640A0D00 
 175              		.align	2
 176              	.LC7:
 177 0088 0A0D4E6F 		.ascii	"\012\015Not a recognized command, please use 'help'"
 177      74206120 
 177      7265636F 
 177      676E697A 
 177      65642063 
 178 00b5 20746F20 		.ascii	" to see commands.\012\015\000"
 178      73656520 
 178      636F6D6D 
 178      616E6473 
 178      2E0A0D00 
 179 00c9 000000   		.section	.text.terminal_parse,"ax",%progbits
 180              		.align	2
 181              		.global	terminal_parse
 182              		.thumb
 183              		.thumb_func
 184              		.type	terminal_parse, %function
 185              	terminal_parse:
 186              	.LFB57:
  74:.\uart-terminal.c **** 
  75:.\uart-terminal.c **** 
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 6


  76:.\uart-terminal.c **** /****************************************************************************
  77:.\uart-terminal.c **** * Function Name: terminal_parse(char serial_in[])
  78:.\uart-terminal.c **** *****************************************************************************
  79:.\uart-terminal.c **** *
  80:.\uart-terminal.c **** * Summary:
  81:.\uart-terminal.c **** *  Called when the user press enter. Takes the serial_in[] array and compares
  82:.\uart-terminal.c **** *  it with hard coded commands. 
  83:.\uart-terminal.c **** *
  84:.\uart-terminal.c **** * Parameters:
  85:.\uart-terminal.c **** *  serial_in[]: array of inputs
  86:.\uart-terminal.c **** *
  87:.\uart-terminal.c **** * Return:
  88:.\uart-terminal.c **** *  None.
  89:.\uart-terminal.c **** *
  90:.\uart-terminal.c **** ****************************************************************************/
  91:.\uart-terminal.c **** void terminal_parse(char serial_in[])
  92:.\uart-terminal.c **** {
 187              		.loc 1 92 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 96
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 9AB0     		sub	sp, sp, #104
 196              		.cfi_def_cfa_offset 112
 197 0004 02AF     		add	r7, sp, #8
 198              		.cfi_def_cfa 7, 104
 199 0006 7860     		str	r0, [r7, #4]
  93:.\uart-terminal.c ****     char* helpString = "\r\n1. Help\r\n2. Print ADC\r\n        Press ESC to stop conversions\r\n3. 
 200              		.loc 1 93 0
 201 0008 424B     		ldr	r3, .L21
 202 000a FB65     		str	r3, [r7, #92]
  94:.\uart-terminal.c ****     double volts;           //used to store adc value
  95:.\uart-terminal.c ****     char adc_val[BUFFER_LEN];       //used to print adc value
  96:.\uart-terminal.c ****     uint8 buffer;
  97:.\uart-terminal.c ****     
  98:.\uart-terminal.c ****     if(stricmp(serial_in, "help") == 0 || stricmp(serial_in, "1") == 0)
 203              		.loc 1 98 0
 204 000c 7868     		ldr	r0, [r7, #4]
 205 000e 4249     		ldr	r1, .L21+4
 206 0010 FFF7FEFF 		bl	strcasecmp
 207 0014 0346     		mov	r3, r0
 208 0016 002B     		cmp	r3, #0
 209 0018 06D0     		beq	.L9
 210              		.loc 1 98 0 is_stmt 0 discriminator 1
 211 001a 7868     		ldr	r0, [r7, #4]
 212 001c 3F49     		ldr	r1, .L21+8
 213 001e FFF7FEFF 		bl	strcasecmp
 214 0022 0346     		mov	r3, r0
 215 0024 002B     		cmp	r3, #0
 216 0026 09D1     		bne	.L10
 217              	.L9:
  99:.\uart-terminal.c ****     {
 100:.\uart-terminal.c ****         while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send more data to 
 218              		.loc 1 100 0 is_stmt 1
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 7


 219 0028 00BF     		nop
 220              	.L11:
 221              		.loc 1 100 0 is_stmt 0 discriminator 1
 222 002a FFF7FEFF 		bl	USBUART_CDCIsReady
 223 002e 0346     		mov	r3, r0
 224 0030 002B     		cmp	r3, #0
 225 0032 FAD0     		beq	.L11
 101:.\uart-terminal.c ****         USBUART_PutString(helpString);       /* Send data to PC */     
 226              		.loc 1 101 0 is_stmt 1
 227 0034 F86D     		ldr	r0, [r7, #92]
 228 0036 FFF7FEFF 		bl	USBUART_PutString
 229 003a 67E0     		b	.L8
 230              	.L10:
 102:.\uart-terminal.c ****     }
 103:.\uart-terminal.c ****     else if(stricmp(serial_in, "Print ADC") == 0 || stricmp(serial_in, "2") == 0)
 231              		.loc 1 103 0
 232 003c 7868     		ldr	r0, [r7, #4]
 233 003e 3849     		ldr	r1, .L21+12
 234 0040 FFF7FEFF 		bl	strcasecmp
 235 0044 0346     		mov	r3, r0
 236 0046 002B     		cmp	r3, #0
 237 0048 06D0     		beq	.L13
 238              		.loc 1 103 0 is_stmt 0 discriminator 1
 239 004a 7868     		ldr	r0, [r7, #4]
 240 004c 3549     		ldr	r1, .L21+16
 241 004e FFF7FEFF 		bl	strcasecmp
 242 0052 0346     		mov	r3, r0
 243 0054 002B     		cmp	r3, #0
 244 0056 50D1     		bne	.L14
 245              	.L13:
 104:.\uart-terminal.c ****     {
 105:.\uart-terminal.c ****         for(;;)     //keep printing conversions 
 106:.\uart-terminal.c ****         {
 107:.\uart-terminal.c ****             if(ADC_SAR_IsEndConversion(ADC_SAR_WAIT_FOR_RESULT))        //if ADC conversion is done
 246              		.loc 1 107 0 is_stmt 1
 247 0058 0020     		movs	r0, #0
 248 005a FFF7FEFF 		bl	ADC_SAR_IsEndConversion
 249 005e 0346     		mov	r3, r0
 250 0060 002B     		cmp	r3, #0
 251 0062 30D0     		beq	.L15
 108:.\uart-terminal.c ****             {
 109:.\uart-terminal.c ****                 volts = ADC_SAR_CountsTo_Volts(ADC_SAR_GetResult16(0));
 252              		.loc 1 109 0
 253 0064 0020     		movs	r0, #0
 254 0066 FFF7FEFF 		bl	ADC_SAR_GetResult16
 255 006a 0346     		mov	r3, r0
 256 006c 1846     		mov	r0, r3
 257 006e FFF7FEFF 		bl	ADC_SAR_CountsTo_Volts
 258 0072 0346     		mov	r3, r0
 259 0074 1846     		mov	r0, r3
 260 0076 FFF7FEFF 		bl	__aeabi_f2d
 261 007a 0246     		mov	r2, r0
 262 007c 0B46     		mov	r3, r1
 263 007e C7E91423 		strd	r2, [r7, #80]
 110:.\uart-terminal.c ****                 sprintf(adc_val, "\n\r%0.4fv, %d", volts, ADC_SAR_GetResult16(0));            //Mak
 264              		.loc 1 110 0
 265 0082 0020     		movs	r0, #0
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 8


 266 0084 FFF7FEFF 		bl	ADC_SAR_GetResult16
 267 0088 0346     		mov	r3, r0
 268 008a 1A46     		mov	r2, r3
 269 008c 07F10C03 		add	r3, r7, #12
 270 0090 0092     		str	r2, [sp]
 271 0092 1846     		mov	r0, r3
 272 0094 2449     		ldr	r1, .L21+20
 273 0096 D7E91423 		ldrd	r2, [r7, #80]
 274 009a FFF7FEFF 		bl	sprintf
 111:.\uart-terminal.c ****                 LCD_Position(0,0);
 275              		.loc 1 111 0
 276 009e 0020     		movs	r0, #0
 277 00a0 0021     		movs	r1, #0
 278 00a2 FFF7FEFF 		bl	LCD_Position
 112:.\uart-terminal.c ****                 LCD_PrintString(adc_val);
 279              		.loc 1 112 0
 280 00a6 07F10C03 		add	r3, r7, #12
 281 00aa 1846     		mov	r0, r3
 282 00ac FFF7FEFF 		bl	LCD_PrintString
 113:.\uart-terminal.c ****                 while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send more 
 283              		.loc 1 113 0
 284 00b0 00BF     		nop
 285              	.L16:
 286              		.loc 1 113 0 is_stmt 0 discriminator 1
 287 00b2 FFF7FEFF 		bl	USBUART_CDCIsReady
 288 00b6 0346     		mov	r3, r0
 289 00b8 002B     		cmp	r3, #0
 290 00ba FAD0     		beq	.L16
 114:.\uart-terminal.c ****                 USBUART_PutString(adc_val);       /* Send data back to PC */  
 291              		.loc 1 114 0 is_stmt 1
 292 00bc 07F10C03 		add	r3, r7, #12
 293 00c0 1846     		mov	r0, r3
 294 00c2 FFF7FEFF 		bl	USBUART_PutString
 295              	.L15:
 115:.\uart-terminal.c ****             }
 116:.\uart-terminal.c ****        
 117:.\uart-terminal.c ****             if(USBUART_DataIsReady() != 0u)               /* Check for input data from PC */
 296              		.loc 1 117 0
 297 00c6 FFF7FEFF 		bl	USBUART_DataIsReady
 298 00ca 0346     		mov	r3, r0
 299 00cc 002B     		cmp	r3, #0
 300 00ce 13D0     		beq	.L17
 118:.\uart-terminal.c ****             {
 119:.\uart-terminal.c ****                 buffer = USBUART_GetChar();
 301              		.loc 1 119 0
 302 00d0 FFF7FEFF 		bl	USBUART_GetChar
 303 00d4 0346     		mov	r3, r0
 304 00d6 87F84F30 		strb	r3, [r7, #79]
 120:.\uart-terminal.c ****                 
 121:.\uart-terminal.c ****                 if (buffer == 27)               //if escaped pressed then exit printing
 305              		.loc 1 121 0
 306 00da 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 307 00de 1B2B     		cmp	r3, #27
 308 00e0 0AD1     		bne	.L17
 122:.\uart-terminal.c ****                 {
 123:.\uart-terminal.c ****                     while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send m
 309              		.loc 1 123 0
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 9


 310 00e2 00BF     		nop
 311              	.L18:
 312              		.loc 1 123 0 is_stmt 0 discriminator 1
 313 00e4 FFF7FEFF 		bl	USBUART_CDCIsReady
 314 00e8 0346     		mov	r3, r0
 315 00ea 002B     		cmp	r3, #0
 316 00ec FAD0     		beq	.L18
 124:.\uart-terminal.c ****                     USBUART_PutString("\n\rStopped\n\r");       /* Send data back to PC */ 
 317              		.loc 1 124 0 is_stmt 1
 318 00ee 0F48     		ldr	r0, .L21+24
 319 00f0 FFF7FEFF 		bl	USBUART_PutString
 125:.\uart-terminal.c ****                     break;
 320              		.loc 1 125 0
 321 00f4 00BF     		nop
 103:.\uart-terminal.c ****     else if(stricmp(serial_in, "Print ADC") == 0 || stricmp(serial_in, "2") == 0)
 322              		.loc 1 103 0
 323 00f6 09E0     		b	.L8
 324              	.L17:
 126:.\uart-terminal.c ****                 }
 127:.\uart-terminal.c ****             }
 128:.\uart-terminal.c ****         }
 325              		.loc 1 128 0
 326 00f8 AEE7     		b	.L13
 327              	.L14:
 129:.\uart-terminal.c ****     }
 130:.\uart-terminal.c ****     else
 131:.\uart-terminal.c ****     {
 132:.\uart-terminal.c ****         while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send more data to 
 328              		.loc 1 132 0
 329 00fa 00BF     		nop
 330              	.L20:
 331              		.loc 1 132 0 is_stmt 0 discriminator 1
 332 00fc FFF7FEFF 		bl	USBUART_CDCIsReady
 333 0100 0346     		mov	r3, r0
 334 0102 002B     		cmp	r3, #0
 335 0104 FAD0     		beq	.L20
 133:.\uart-terminal.c ****         USBUART_PutString("\n\rNot a recognized command, please use 'help' to see commands.\n\r"); 
 336              		.loc 1 133 0 is_stmt 1
 337 0106 0A48     		ldr	r0, .L21+28
 338 0108 FFF7FEFF 		bl	USBUART_PutString
 339              	.L8:
 134:.\uart-terminal.c ****     }
 135:.\uart-terminal.c **** }
 340              		.loc 1 135 0
 341 010c 6037     		adds	r7, r7, #96
 342 010e BD46     		mov	sp, r7
 343              		@ sp needed
 344 0110 80BD     		pop	{r7, pc}
 345              	.L22:
 346 0112 00BF     		.align	2
 347              	.L21:
 348 0114 00000000 		.word	.LC0
 349 0118 50000000 		.word	.LC1
 350 011c 58000000 		.word	.LC2
 351 0120 5C000000 		.word	.LC3
 352 0124 68000000 		.word	.LC4
 353 0128 6C000000 		.word	.LC5
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 10


 354 012c 7C000000 		.word	.LC6
 355 0130 88000000 		.word	.LC7
 356              		.cfi_endproc
 357              	.LFE57:
 358              		.size	terminal_parse, .-terminal_parse
 359              		.text
 360              	.Letext0:
 361              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 362              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 363              		.file 4 ".\\Generated_Source\\PSoC5/cytypes.h"
 364              		.file 5 ".\\Generated_Source\\PSoC5/core_cm3.h"
 365              		.section	.debug_info,"",%progbits
 366              	.Ldebug_info0:
 367 0000 70010000 		.4byte	0x170
 368 0004 0400     		.2byte	0x4
 369 0006 00000000 		.4byte	.Ldebug_abbrev0
 370 000a 04       		.byte	0x4
 371 000b 01       		.uleb128 0x1
 372 000c CF000000 		.4byte	.LASF24
 373 0010 01       		.byte	0x1
 374 0011 C4010000 		.4byte	.LASF25
 375 0015 69010000 		.4byte	.LASF26
 376 0019 00000000 		.4byte	.Ldebug_ranges0+0
 377 001d 00000000 		.4byte	0
 378 0021 00000000 		.4byte	.Ldebug_line0
 379 0025 02       		.uleb128 0x2
 380 0026 01       		.byte	0x1
 381 0027 06       		.byte	0x6
 382 0028 C3000000 		.4byte	.LASF0
 383 002c 02       		.uleb128 0x2
 384 002d 01       		.byte	0x1
 385 002e 08       		.byte	0x8
 386 002f 6A000000 		.4byte	.LASF1
 387 0033 02       		.uleb128 0x2
 388 0034 02       		.byte	0x2
 389 0035 05       		.byte	0x5
 390 0036 BA010000 		.4byte	.LASF2
 391 003a 02       		.uleb128 0x2
 392 003b 02       		.byte	0x2
 393 003c 07       		.byte	0x7
 394 003d 0E000000 		.4byte	.LASF3
 395 0041 03       		.uleb128 0x3
 396 0042 4B010000 		.4byte	.LASF9
 397 0046 02       		.byte	0x2
 398 0047 37       		.byte	0x37
 399 0048 4C000000 		.4byte	0x4c
 400 004c 02       		.uleb128 0x2
 401 004d 04       		.byte	0x4
 402 004e 05       		.byte	0x5
 403 004f 83000000 		.4byte	.LASF4
 404 0053 02       		.uleb128 0x2
 405 0054 04       		.byte	0x4
 406 0055 07       		.byte	0x7
 407 0056 94000000 		.4byte	.LASF5
 408 005a 02       		.uleb128 0x2
 409 005b 08       		.byte	0x8
 410 005c 05       		.byte	0x5
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 11


 411 005d 00000000 		.4byte	.LASF6
 412 0061 02       		.uleb128 0x2
 413 0062 08       		.byte	0x8
 414 0063 07       		.byte	0x7
 415 0064 4D000000 		.4byte	.LASF7
 416 0068 04       		.uleb128 0x4
 417 0069 04       		.byte	0x4
 418 006a 05       		.byte	0x5
 419 006b 696E7400 		.ascii	"int\000"
 420 006f 02       		.uleb128 0x2
 421 0070 04       		.byte	0x4
 422 0071 07       		.byte	0x7
 423 0072 21000000 		.4byte	.LASF8
 424 0076 03       		.uleb128 0x3
 425 0077 D6010000 		.4byte	.LASF10
 426 007b 03       		.byte	0x3
 427 007c 41       		.byte	0x41
 428 007d 41000000 		.4byte	0x41
 429 0081 03       		.uleb128 0x3
 430 0082 38000000 		.4byte	.LASF11
 431 0086 04       		.byte	0x4
 432 0087 A1       		.byte	0xa1
 433 0088 2C000000 		.4byte	0x2c
 434 008c 02       		.uleb128 0x2
 435 008d 04       		.byte	0x4
 436 008e 04       		.byte	0x4
 437 008f 63010000 		.4byte	.LASF12
 438 0093 02       		.uleb128 0x2
 439 0094 08       		.byte	0x8
 440 0095 04       		.byte	0x4
 441 0096 A6000000 		.4byte	.LASF13
 442 009a 02       		.uleb128 0x2
 443 009b 01       		.byte	0x1
 444 009c 08       		.byte	0x8
 445 009d 78000000 		.4byte	.LASF14
 446 00a1 02       		.uleb128 0x2
 447 00a2 04       		.byte	0x4
 448 00a3 07       		.byte	0x7
 449 00a4 AD000000 		.4byte	.LASF15
 450 00a8 05       		.uleb128 0x5
 451 00a9 04       		.byte	0x4
 452 00aa 9A000000 		.4byte	0x9a
 453 00ae 06       		.uleb128 0x6
 454 00af 55010000 		.4byte	.LASF18
 455 00b3 01       		.byte	0x1
 456 00b4 1F       		.byte	0x1f
 457 00b5 00000000 		.4byte	.LFB56
 458 00b9 B8000000 		.4byte	.LFE56-.LFB56
 459 00bd 01       		.uleb128 0x1
 460 00be 9C       		.byte	0x9c
 461 00bf EE000000 		.4byte	0xee
 462 00c3 07       		.uleb128 0x7
 463 00c4 2E000000 		.4byte	.LASF16
 464 00c8 01       		.byte	0x1
 465 00c9 1F       		.byte	0x1f
 466 00ca A8000000 		.4byte	0xa8
 467 00ce 02       		.uleb128 0x2
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 12


 468 00cf 91       		.byte	0x91
 469 00d0 6C       		.sleb128 -20
 470 00d1 07       		.uleb128 0x7
 471 00d2 64000000 		.4byte	.LASF17
 472 00d6 01       		.byte	0x1
 473 00d7 1F       		.byte	0x1f
 474 00d8 EE000000 		.4byte	0xee
 475 00dc 02       		.uleb128 0x2
 476 00dd 91       		.byte	0x91
 477 00de 68       		.sleb128 -24
 478 00df 08       		.uleb128 0x8
 479 00e0 DE010000 		.4byte	.LASF20
 480 00e4 01       		.byte	0x1
 481 00e5 21       		.byte	0x21
 482 00e6 81000000 		.4byte	0x81
 483 00ea 02       		.uleb128 0x2
 484 00eb 91       		.byte	0x91
 485 00ec 77       		.sleb128 -9
 486 00ed 00       		.byte	0
 487 00ee 05       		.uleb128 0x5
 488 00ef 04       		.byte	0x4
 489 00f0 81000000 		.4byte	0x81
 490 00f4 06       		.uleb128 0x6
 491 00f5 3E000000 		.4byte	.LASF19
 492 00f9 01       		.byte	0x1
 493 00fa 5B       		.byte	0x5b
 494 00fb 00000000 		.4byte	.LFB57
 495 00ff 34010000 		.4byte	.LFE57-.LFB57
 496 0103 01       		.uleb128 0x1
 497 0104 9C       		.byte	0x9c
 498 0105 52010000 		.4byte	0x152
 499 0109 07       		.uleb128 0x7
 500 010a 2E000000 		.4byte	.LASF16
 501 010e 01       		.byte	0x1
 502 010f 5B       		.byte	0x5b
 503 0110 A8000000 		.4byte	0xa8
 504 0114 03       		.uleb128 0x3
 505 0115 91       		.byte	0x91
 506 0116 9C7F     		.sleb128 -100
 507 0118 08       		.uleb128 0x8
 508 0119 E5010000 		.4byte	.LASF21
 509 011d 01       		.byte	0x1
 510 011e 5D       		.byte	0x5d
 511 011f A8000000 		.4byte	0xa8
 512 0123 02       		.uleb128 0x2
 513 0124 91       		.byte	0x91
 514 0125 74       		.sleb128 -12
 515 0126 08       		.uleb128 0x8
 516 0127 7D000000 		.4byte	.LASF22
 517 012b 01       		.byte	0x1
 518 012c 5E       		.byte	0x5e
 519 012d 93000000 		.4byte	0x93
 520 0131 02       		.uleb128 0x2
 521 0132 91       		.byte	0x91
 522 0133 68       		.sleb128 -24
 523 0134 08       		.uleb128 0x8
 524 0135 8C000000 		.4byte	.LASF23
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 13


 525 0139 01       		.byte	0x1
 526 013a 5F       		.byte	0x5f
 527 013b 52010000 		.4byte	0x152
 528 013f 03       		.uleb128 0x3
 529 0140 91       		.byte	0x91
 530 0141 A47F     		.sleb128 -92
 531 0143 08       		.uleb128 0x8
 532 0144 DE010000 		.4byte	.LASF20
 533 0148 01       		.byte	0x1
 534 0149 60       		.byte	0x60
 535 014a 81000000 		.4byte	0x81
 536 014e 02       		.uleb128 0x2
 537 014f 91       		.byte	0x91
 538 0150 67       		.sleb128 -25
 539 0151 00       		.byte	0
 540 0152 09       		.uleb128 0x9
 541 0153 9A000000 		.4byte	0x9a
 542 0157 62010000 		.4byte	0x162
 543 015b 0A       		.uleb128 0xa
 544 015c A1000000 		.4byte	0xa1
 545 0160 3F       		.byte	0x3f
 546 0161 00       		.byte	0
 547 0162 0B       		.uleb128 0xb
 548 0163 B6000000 		.4byte	.LASF27
 549 0167 05       		.byte	0x5
 550 0168 1606     		.2byte	0x616
 551 016a 6E010000 		.4byte	0x16e
 552 016e 0C       		.uleb128 0xc
 553 016f 76000000 		.4byte	0x76
 554 0173 00       		.byte	0
 555              		.section	.debug_abbrev,"",%progbits
 556              	.Ldebug_abbrev0:
 557 0000 01       		.uleb128 0x1
 558 0001 11       		.uleb128 0x11
 559 0002 01       		.byte	0x1
 560 0003 25       		.uleb128 0x25
 561 0004 0E       		.uleb128 0xe
 562 0005 13       		.uleb128 0x13
 563 0006 0B       		.uleb128 0xb
 564 0007 03       		.uleb128 0x3
 565 0008 0E       		.uleb128 0xe
 566 0009 1B       		.uleb128 0x1b
 567 000a 0E       		.uleb128 0xe
 568 000b 55       		.uleb128 0x55
 569 000c 17       		.uleb128 0x17
 570 000d 11       		.uleb128 0x11
 571 000e 01       		.uleb128 0x1
 572 000f 10       		.uleb128 0x10
 573 0010 17       		.uleb128 0x17
 574 0011 00       		.byte	0
 575 0012 00       		.byte	0
 576 0013 02       		.uleb128 0x2
 577 0014 24       		.uleb128 0x24
 578 0015 00       		.byte	0
 579 0016 0B       		.uleb128 0xb
 580 0017 0B       		.uleb128 0xb
 581 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 14


 582 0019 0B       		.uleb128 0xb
 583 001a 03       		.uleb128 0x3
 584 001b 0E       		.uleb128 0xe
 585 001c 00       		.byte	0
 586 001d 00       		.byte	0
 587 001e 03       		.uleb128 0x3
 588 001f 16       		.uleb128 0x16
 589 0020 00       		.byte	0
 590 0021 03       		.uleb128 0x3
 591 0022 0E       		.uleb128 0xe
 592 0023 3A       		.uleb128 0x3a
 593 0024 0B       		.uleb128 0xb
 594 0025 3B       		.uleb128 0x3b
 595 0026 0B       		.uleb128 0xb
 596 0027 49       		.uleb128 0x49
 597 0028 13       		.uleb128 0x13
 598 0029 00       		.byte	0
 599 002a 00       		.byte	0
 600 002b 04       		.uleb128 0x4
 601 002c 24       		.uleb128 0x24
 602 002d 00       		.byte	0
 603 002e 0B       		.uleb128 0xb
 604 002f 0B       		.uleb128 0xb
 605 0030 3E       		.uleb128 0x3e
 606 0031 0B       		.uleb128 0xb
 607 0032 03       		.uleb128 0x3
 608 0033 08       		.uleb128 0x8
 609 0034 00       		.byte	0
 610 0035 00       		.byte	0
 611 0036 05       		.uleb128 0x5
 612 0037 0F       		.uleb128 0xf
 613 0038 00       		.byte	0
 614 0039 0B       		.uleb128 0xb
 615 003a 0B       		.uleb128 0xb
 616 003b 49       		.uleb128 0x49
 617 003c 13       		.uleb128 0x13
 618 003d 00       		.byte	0
 619 003e 00       		.byte	0
 620 003f 06       		.uleb128 0x6
 621 0040 2E       		.uleb128 0x2e
 622 0041 01       		.byte	0x1
 623 0042 3F       		.uleb128 0x3f
 624 0043 19       		.uleb128 0x19
 625 0044 03       		.uleb128 0x3
 626 0045 0E       		.uleb128 0xe
 627 0046 3A       		.uleb128 0x3a
 628 0047 0B       		.uleb128 0xb
 629 0048 3B       		.uleb128 0x3b
 630 0049 0B       		.uleb128 0xb
 631 004a 27       		.uleb128 0x27
 632 004b 19       		.uleb128 0x19
 633 004c 11       		.uleb128 0x11
 634 004d 01       		.uleb128 0x1
 635 004e 12       		.uleb128 0x12
 636 004f 06       		.uleb128 0x6
 637 0050 40       		.uleb128 0x40
 638 0051 18       		.uleb128 0x18
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 15


 639 0052 9642     		.uleb128 0x2116
 640 0054 19       		.uleb128 0x19
 641 0055 01       		.uleb128 0x1
 642 0056 13       		.uleb128 0x13
 643 0057 00       		.byte	0
 644 0058 00       		.byte	0
 645 0059 07       		.uleb128 0x7
 646 005a 05       		.uleb128 0x5
 647 005b 00       		.byte	0
 648 005c 03       		.uleb128 0x3
 649 005d 0E       		.uleb128 0xe
 650 005e 3A       		.uleb128 0x3a
 651 005f 0B       		.uleb128 0xb
 652 0060 3B       		.uleb128 0x3b
 653 0061 0B       		.uleb128 0xb
 654 0062 49       		.uleb128 0x49
 655 0063 13       		.uleb128 0x13
 656 0064 02       		.uleb128 0x2
 657 0065 18       		.uleb128 0x18
 658 0066 00       		.byte	0
 659 0067 00       		.byte	0
 660 0068 08       		.uleb128 0x8
 661 0069 34       		.uleb128 0x34
 662 006a 00       		.byte	0
 663 006b 03       		.uleb128 0x3
 664 006c 0E       		.uleb128 0xe
 665 006d 3A       		.uleb128 0x3a
 666 006e 0B       		.uleb128 0xb
 667 006f 3B       		.uleb128 0x3b
 668 0070 0B       		.uleb128 0xb
 669 0071 49       		.uleb128 0x49
 670 0072 13       		.uleb128 0x13
 671 0073 02       		.uleb128 0x2
 672 0074 18       		.uleb128 0x18
 673 0075 00       		.byte	0
 674 0076 00       		.byte	0
 675 0077 09       		.uleb128 0x9
 676 0078 01       		.uleb128 0x1
 677 0079 01       		.byte	0x1
 678 007a 49       		.uleb128 0x49
 679 007b 13       		.uleb128 0x13
 680 007c 01       		.uleb128 0x1
 681 007d 13       		.uleb128 0x13
 682 007e 00       		.byte	0
 683 007f 00       		.byte	0
 684 0080 0A       		.uleb128 0xa
 685 0081 21       		.uleb128 0x21
 686 0082 00       		.byte	0
 687 0083 49       		.uleb128 0x49
 688 0084 13       		.uleb128 0x13
 689 0085 2F       		.uleb128 0x2f
 690 0086 0B       		.uleb128 0xb
 691 0087 00       		.byte	0
 692 0088 00       		.byte	0
 693 0089 0B       		.uleb128 0xb
 694 008a 34       		.uleb128 0x34
 695 008b 00       		.byte	0
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 16


 696 008c 03       		.uleb128 0x3
 697 008d 0E       		.uleb128 0xe
 698 008e 3A       		.uleb128 0x3a
 699 008f 0B       		.uleb128 0xb
 700 0090 3B       		.uleb128 0x3b
 701 0091 05       		.uleb128 0x5
 702 0092 49       		.uleb128 0x49
 703 0093 13       		.uleb128 0x13
 704 0094 3F       		.uleb128 0x3f
 705 0095 19       		.uleb128 0x19
 706 0096 3C       		.uleb128 0x3c
 707 0097 19       		.uleb128 0x19
 708 0098 00       		.byte	0
 709 0099 00       		.byte	0
 710 009a 0C       		.uleb128 0xc
 711 009b 35       		.uleb128 0x35
 712 009c 00       		.byte	0
 713 009d 49       		.uleb128 0x49
 714 009e 13       		.uleb128 0x13
 715 009f 00       		.byte	0
 716 00a0 00       		.byte	0
 717 00a1 00       		.byte	0
 718              		.section	.debug_aranges,"",%progbits
 719 0000 24000000 		.4byte	0x24
 720 0004 0200     		.2byte	0x2
 721 0006 00000000 		.4byte	.Ldebug_info0
 722 000a 04       		.byte	0x4
 723 000b 00       		.byte	0
 724 000c 0000     		.2byte	0
 725 000e 0000     		.2byte	0
 726 0010 00000000 		.4byte	.LFB56
 727 0014 B8000000 		.4byte	.LFE56-.LFB56
 728 0018 00000000 		.4byte	.LFB57
 729 001c 34010000 		.4byte	.LFE57-.LFB57
 730 0020 00000000 		.4byte	0
 731 0024 00000000 		.4byte	0
 732              		.section	.debug_ranges,"",%progbits
 733              	.Ldebug_ranges0:
 734 0000 00000000 		.4byte	.LFB56
 735 0004 B8000000 		.4byte	.LFE56
 736 0008 00000000 		.4byte	.LFB57
 737 000c 34010000 		.4byte	.LFE57
 738 0010 00000000 		.4byte	0
 739 0014 00000000 		.4byte	0
 740              		.section	.debug_line,"",%progbits
 741              	.Ldebug_line0:
 742 0000 E0010000 		.section	.debug_str,"MS",%progbits,1
 742      02005A01 
 742      00000201 
 742      FB0E0D00 
 742      01010101 
 743              	.LASF6:
 744 0000 6C6F6E67 		.ascii	"long long int\000"
 744      206C6F6E 
 744      6720696E 
 744      7400
 745              	.LASF3:
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 17


 746 000e 73686F72 		.ascii	"short unsigned int\000"
 746      7420756E 
 746      7369676E 
 746      65642069 
 746      6E7400
 747              	.LASF8:
 748 0021 756E7369 		.ascii	"unsigned int\000"
 748      676E6564 
 748      20696E74 
 748      00
 749              	.LASF16:
 750 002e 73657269 		.ascii	"serial_in\000"
 750      616C5F69 
 750      6E00
 751              	.LASF11:
 752 0038 75696E74 		.ascii	"uint8\000"
 752      3800
 753              	.LASF19:
 754 003e 7465726D 		.ascii	"terminal_parse\000"
 754      696E616C 
 754      5F706172 
 754      736500
 755              	.LASF7:
 756 004d 6C6F6E67 		.ascii	"long long unsigned int\000"
 756      206C6F6E 
 756      6720756E 
 756      7369676E 
 756      65642069 
 757              	.LASF17:
 758 0064 74726163 		.ascii	"track\000"
 758      6B00
 759              	.LASF1:
 760 006a 756E7369 		.ascii	"unsigned char\000"
 760      676E6564 
 760      20636861 
 760      7200
 761              	.LASF14:
 762 0078 63686172 		.ascii	"char\000"
 762      00
 763              	.LASF22:
 764 007d 766F6C74 		.ascii	"volts\000"
 764      7300
 765              	.LASF4:
 766 0083 6C6F6E67 		.ascii	"long int\000"
 766      20696E74 
 766      00
 767              	.LASF23:
 768 008c 6164635F 		.ascii	"adc_val\000"
 768      76616C00 
 769              	.LASF5:
 770 0094 6C6F6E67 		.ascii	"long unsigned int\000"
 770      20756E73 
 770      69676E65 
 770      6420696E 
 770      7400
 771              	.LASF13:
 772 00a6 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 18


 772      6C6500
 773              	.LASF15:
 774 00ad 73697A65 		.ascii	"sizetype\000"
 774      74797065 
 774      00
 775              	.LASF27:
 776 00b6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 776      52784275 
 776      66666572 
 776      00
 777              	.LASF0:
 778 00c3 7369676E 		.ascii	"signed char\000"
 778      65642063 
 778      68617200 
 779              	.LASF24:
 780 00cf 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 780      4320342E 
 780      382E3420 
 780      32303134 
 780      30353236 
 781 0102 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 781      20726576 
 781      6973696F 
 781      6E203231 
 781      31333538 
 782 0135 30202D66 		.ascii	"0 -ffunction-sections\000"
 782      66756E63 
 782      74696F6E 
 782      2D736563 
 782      74696F6E 
 783              	.LASF9:
 784 014b 5F5F696E 		.ascii	"__int32_t\000"
 784      7433325F 
 784      7400
 785              	.LASF18:
 786 0155 7465726D 		.ascii	"terminal_echo\000"
 786      696E616C 
 786      5F656368 
 786      6F00
 787              	.LASF12:
 788 0163 666C6F61 		.ascii	"float\000"
 788      7400
 789              	.LASF26:
 790 0169 433A5C55 		.ascii	"C:\\Users\\Chai Yang\\Documents\\Node-Elephant\\TER"
 790      73657273 
 790      5C436861 
 790      69205961 
 790      6E675C44 
 791 0197 4D494E41 		.ascii	"MINAL\\Node-Elephant-Terminal.cydsn\000"
 791      4C5C4E6F 
 791      64652D45 
 791      6C657068 
 791      616E742D 
 792              	.LASF2:
 793 01ba 73686F72 		.ascii	"short int\000"
 793      7420696E 
 793      7400
ARM GAS  C:\Users\CHAIYA~1\AppData\Local\Temp\ccrDaNBY.s 			page 19


 794              	.LASF25:
 795 01c4 2E5C7561 		.ascii	".\\uart-terminal.c\000"
 795      72742D74 
 795      65726D69 
 795      6E616C2E 
 795      6300
 796              	.LASF10:
 797 01d6 696E7433 		.ascii	"int32_t\000"
 797      325F7400 
 798              	.LASF20:
 799 01de 62756666 		.ascii	"buffer\000"
 799      657200
 800              	.LASF21:
 801 01e5 68656C70 		.ascii	"helpString\000"
 801      53747269 
 801      6E6700
 802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
